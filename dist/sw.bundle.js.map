{"version":3,"file":"sw.bundle.js","mappings":";mBAOA,QAPkB,CACjBA,WAAY,mBACZC,cAAe,8BACfC,iBAAkB,EAClBC,kBAAmB,kQCHpB,kuNA6CA,QA5CoB,CACbC,gBAAe,SAACC,GAAU,4HACX,EAAKC,aAAY,OAAvB,EAAH,KACLC,OAAOF,GAAU,0CAFQ,EAGhC,EAEMG,eAAc,WAAG,iHACGC,OAAOC,OAAM,OAAnB,EAAH,KAEdC,QAAO,SAACC,GAAI,OAAKA,IAASC,EAAAA,UAAoB,IAC9CC,KAAI,SAACC,GAAY,OAAKN,OAAM,OAAQM,EAAa,IAAE,0CAJ/B,EAKvB,EAEMC,gBAAe,SAACC,GAAS,kIACPR,OAAOS,MAAMD,GAAQ,OAA9B,KAARE,EAAW,EAAH,MAEA,CAAF,eACiB,OAA5B,EAAKC,cAAcH,GAAS,kBACrBE,GAAQ,gCAET,EAAKC,cAAcH,IAAQ,0CAPJ,EAQ/B,EAEMX,WAAU,WAAG,0HACXG,OAAOY,KAAKR,EAAAA,aAAqB,0CADtB,EAEnB,EAEMO,cAAa,SAACH,GAAS,kIACLK,MAAML,GAAQ,OAAvB,IAARE,EAAW,EAAH,OAEuB,MAApBA,EAASI,OAAc,yCAChCJ,GAAQ,uBAGV,EAAKK,UAAUP,GAAQ,gCACtBE,GAAQ,0CARa,EAS7B,EAEMK,UAAS,SAACP,GAAS,4HACJ,EAAKX,aAAY,OAAvB,EAAH,KACLmB,IAAIR,GAAS,0CAFK,EAGzB,GCtCD,IAAMS,EAAgB,CACrB,KACA,4BACA,gCACA,gCACA,gCACA,iCACA,iCACA,iCACA,iCACA,iCAEA,uBACA,wBAEA,uBACA,wBAEA,uBACA,wBAEA,eACA,gBACA,kBACA,iBACA,qBAGDC,KAAKC,iBAAiB,WAAW,SAACC,GACjCA,EAAMC,UAAUC,EAAAA,gBAA4B,GAAD,OAAKL,KAChDM,QAAQC,IAAI,gCACb,IAEAN,KAAKC,iBAAiB,YAAY,SAACC,GAClCA,EAAMC,UAAUC,EAAAA,kBAChBC,QAAQC,IAAI,gCACb,IAEAN,KAAKC,iBAAiB,SAAS,SAACC,GAG/BA,EAAMK,YAAYH,EAAAA,gBAA4BF,EAAMZ,SAErD","sources":["webpack://restaurant-apps/./src/scripts/config/constants.js","webpack://restaurant-apps/./src/scripts/pwa/cache-helper.js","webpack://restaurant-apps/./src/sw.js"],"sourcesContent":["const CONSTANTS = {\r\n\tCACHE_NAME: 'restaurant-pwa-1',\r\n\tDATABASE_NAME: 'restaurants-review-database',\r\n\tDATABASE_VERSION: 1,\r\n\tOBJECT_STORE_NAME: 'restaurants',\r\n};\r\n\r\nexport default CONSTANTS;\r\n","import CONSTANTS from '../config/constants';\r\n\r\nconst CacheHelper = {\r\n\tasync cachingAppShell(requests) {\r\n\t\tconst cache = await this._openCache();\r\n\t\tcache.addAll(requests);\r\n\t},\r\n\r\n\tasync deleteOldCache() {\r\n\t\tconst cacheNames = await caches.keys();\r\n\t\tcacheNames\r\n\t\t\t.filter((name) => name !== CONSTANTS.CACHE_NAME)\r\n\t\t\t.map((filteredName) => caches.delete(filteredName));\r\n\t},\r\n\r\n\tasync revalidateCache(request) {\r\n\t\tconst response = await caches.match(request);\r\n\r\n\t\tif (response) {\r\n\t\t\tthis._fetchRequest(request);\r\n\t\t\treturn response;\r\n\t\t}\r\n\t\treturn this._fetchRequest(request);\r\n\t},\r\n\r\n\tasync _openCache() {\r\n\t\treturn caches.open(CONSTANTS.CACHE_NAME);\r\n\t},\r\n\r\n\tasync _fetchRequest(request) {\r\n\t\tconst response = await fetch(request);\r\n\r\n\t\tif (!response || response.status !== 200) {\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tawait this._addCache(request);\r\n\t\treturn response;\r\n\t},\r\n\r\n\tasync _addCache(request) {\r\n\t\tconst cache = await this._openCache();\r\n\t\tcache.add(request);\r\n\t},\r\n};\r\n\r\nexport default CacheHelper;\r\n","// import 'regenerator-runtime'; // cukup di index.js\r\n\r\nimport CacheHelper from './scripts/pwa/cache-helper';\r\n\r\n// Daftar asset yang akan dicaching\r\nconst assetsToCache = [\r\n\t'./',\r\n\t'./icons/maskable_icon.png',\r\n\t'./icons/maskable_icon_x48.png',\r\n\t'./icons/maskable_icon_x72.png',\r\n\t'./icons/maskable_icon_x96.png',\r\n\t'./icons/maskable_icon_x128.png',\r\n\t'./icons/maskable_icon_x144.png',\r\n\t'./icons/maskable_icon_x192.png',\r\n\t'./icons/maskable_icon_x384.png',\r\n\t'./icons/maskable_icon_x512.png',\r\n\r\n\t'./images-lg/hero.jpg',\r\n\t'./images-lg/hero.webp',\r\n\r\n\t'./images-md/hero.jpg',\r\n\t'./images-md/hero.webp',\r\n\r\n\t'./images-sm/hero.jpg',\r\n\t'./images-sm/hero.webp',\r\n\r\n\t'./index.html',\r\n\t'./favicon.ico',\r\n\t'./app.bundle.js',\r\n\t'./sw.bundle.js',\r\n\t'./app.webmanifest',\r\n];\r\n\r\nself.addEventListener('install', (event) => {\r\n\tevent.waitUntil(CacheHelper.cachingAppShell([...assetsToCache]));\r\n\tconsole.log('Installing Service Worker ...');\r\n});\r\n\r\nself.addEventListener('activate', (event) => {\r\n\tevent.waitUntil(CacheHelper.deleteOldCache());\r\n\tconsole.log('Activating Service Worker ...');\r\n});\r\n\r\nself.addEventListener('fetch', (event) => {\r\n\t//   console.log(event.request);\r\n\r\n\tevent.respondWith(CacheHelper.revalidateCache(event.request));\r\n\t// TODO: Add/get fetch request to/from caches\r\n});\r\n"],"names":["CACHE_NAME","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","cachingAppShell","requests","_openCache","addAll","deleteOldCache","caches","keys","filter","name","CONSTANTS","map","filteredName","revalidateCache","request","match","response","_fetchRequest","open","fetch","status","_addCache","add","assetsToCache","self","addEventListener","event","waitUntil","CacheHelper","console","log","respondWith"],"sourceRoot":""}