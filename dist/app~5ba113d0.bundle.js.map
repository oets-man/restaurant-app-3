{"version":3,"file":"app~5ba113d0.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./src/scripts/data/restaurants-api.js","webpack://restaurant-apps/./src/scripts/data/restaurants-idb.js"],"sourcesContent":["import api from '../config/api';\r\nimport URL from '../config/url';\r\n\r\nclass RestaurantsApi {\r\n\tstatic getAllRestaurants = async () => {\r\n\t\tconst get = await api.get('list');\r\n\t\tconst { count, restaurants, message, error } = get.data;\r\n\t\tif (error) {\r\n\t\t\treturn {\r\n\t\t\t\tmessage,\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tcount,\r\n\t\t\trestaurants,\r\n\t\t};\r\n\t};\r\n\r\n\tstatic getRestaurant = async (id) => {\r\n\t\tconst get = await api.get(URL.DETAIL(id));\r\n\t\tconst { restaurant, message, error } = get.data;\r\n\t\tif (error) {\r\n\t\t\treturn {\r\n\t\t\t\tmessage,\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn {\r\n\t\t\trestaurant,\r\n\t\t};\r\n\t};\r\n\r\n\tstatic addReview = async (data) => {\r\n\t\tconst config = {\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: URL.REVIEW,\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tdata: data,\r\n\t\t};\r\n\t\tconst review = await api(config);\r\n\t\treturn review.data;\r\n\t};\r\n}\r\n\r\nexport default RestaurantsApi;\r\n","import { openDB } from 'idb';\r\nimport CONSTANTS from '../config/constants';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONSTANTS;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n\tupgrade(database) {\r\n\t\tdatabase.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n\t},\r\n});\r\n\r\nconst RestaurantsIdb = {\r\n\tasync getRestaurant(id) {\r\n\t\tif (!id) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\treturn (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n\t},\r\n\r\n\tasync getAllRestaurants() {\r\n\t\treturn (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n\t},\r\n\r\n\tasync putRestaurant(restaurant) {\r\n\t\t// eslint-disable-next-line no-prototype-builtins\r\n\t\tif (!restaurant.hasOwnProperty('id')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\treturn (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n\t},\r\n\r\n\tasync deleteRestaurant(id) {\r\n\t\tif (!id) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\treturn (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n\t},\r\n\tasync searchRestaurants(query) {\r\n\t\treturn (await this.getAllRestaurants()).filter((restaurant) => {\r\n\t\t\tconst loweredCaseRestaurantName = (restaurant.name || '-').toLowerCase();\r\n\t\t\tconst jammedRestaurantName = loweredCaseRestaurantName.replace(/\\s/g, '');\r\n\t\t\tconst loweredCaseQuery = query.toLowerCase();\r\n\t\t\tconst jammedQuery = loweredCaseQuery.replace(/\\s/g, '');\r\n\t\t\treturn jammedRestaurantName.indexOf(jammedQuery) !== -1;\r\n\t\t});\r\n\t},\r\n};\r\n\r\nexport default RestaurantsIdb;\r\n"],"names":["i","RestaurantsApi","api","get","data","count","restaurants","message","error","id","URL","restaurant","config","method","url","headers","review","DATABASE_NAME","CONSTANTS","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","getAllRestaurants","getAll","putRestaurant","hasOwnProperty","put","deleteRestaurant","searchRestaurants","query","filter","jammedRestaurantName","name","toLowerCase","replace","jammedQuery","indexOf"],"sourceRoot":""}